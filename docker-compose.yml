version: "3.9"

services:
  db:
    image: postgres:15
    container_name: bs_postgres
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: bs_redis
    restart: always
    env_file:
      - .env
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    container_name: bs_web
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
        daphne -b 0.0.0.0 -p 8000 core.asgi:application
      "
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    container_name: bs_celery
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
